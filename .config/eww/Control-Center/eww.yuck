;; for notifications
(deflisten control-center-cards "scripts/logger.zsh subscribe")
(defpoll control-center-critical :interval "1s" "scripts/logger.zsh crits")

;; for controls and tray
(defvar net-toggle "scripts/net.sh --toggle" )
(defpoll net-status :interval "1s" "scripts/net.sh --status")
(defvar volume-toggle "scripts/vol.sh --toggle")
(defpoll volume-status :interval "1s" "scripts/vol.sh --status")
(defvar bluetooth-toggle "scripts/bluetooth.sh --toggle")
(defpoll bluetooth-status :interval "1s" "scripts/bluetooth.sh --status")
(defpoll bluetooth-icon :interval "1s" "scripts/bluetooth.sh --icon")
(defvar dunst-toggle "scripts/dunst.sh --toggle")
(defpoll dunst-status :interval "1s" "scripts/dunst.sh --status")
(defpoll redshift :interval "1s" "[ $(pidof redshift) ] && echo '󰛨' || echo '󰹏'")

;; for sliders
(defpoll volume :interval "1s" "~/.config/eww/Control-Center/scripts/getvol.sh")
(defpoll volume-slider-indicator :interval "0s" "scripts/volume-slider.sh")
(defpoll mic :interval "1s" "~/.config/eww/Control-Center/scripts/getmic.sh")
(defpoll mic-slider-indicator :interval "0s" "scripts/mic-slider.sh")
(defpoll brightness :interval "1s" "~/.config/eww/Control-Center/scripts/brightness-slider.sh --value")
(defpoll brightness-slider-indicator :interval "0s" "scripts/brightness-slider.sh --icon")



(defwidget tray []
  (box :class "control-center-tray" :height 280
    (box :orientation "v" :space-evenly "false"
      
      (box :orientation "h" :class "volume-slider-stuff" :space-evenly "false"
        (button :onclick "amixer set Master toggle" :class "volume-slider-icon" "${volume-slider-indicator}")
        (scale :class "volume-slider"
                :value volume
                :orientation "h"
                :width 370
                :active true
                :max 101
                :min 0
                :onchange "amixer set Master {}% && canberra-gtk-play -f /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga"))
      (box :orientation "h" :class "mic-slider-stuff" :space-evenly "false"
        (button :onclick "amixer set Capture toggle" :class "mic-slider-icon" "${mic-slider-indicator}")
        (scale :class "mic-slider"
                :value mic
                :orientation "h"
                :width 370
                :active true
                :max 101
                :min 0
                :onchange "amixer set Capture {}%"))
      (box :orientation "h" :class "brightness-slider-stuff" :space-evenly "false"
        (button :class "brightness-slider-icon" "${brightness-slider-indicator}")
        (scale :class "brightness-slider"
                :orientation "h"
                :max 101
                :min 0
                :active true
                :value brightness
                :width 370
                :onchange "brightnessctl s {}%")))))

(defwindow control-center :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :monitor 0
  :geometry (geometry   :y 6% :x 73%)
  (tray))
